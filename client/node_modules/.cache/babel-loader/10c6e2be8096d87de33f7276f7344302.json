{"ast":null,"code":"var _jsxFileName = \"/Users/tanyajain/study/s3upload/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Upload } from './upoad';\nimport { Context } from './context';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [context, setContext] = useContext(Context); // On file select (from the pop up)\n\n  onFileChange = event => {\n    // Update the state\n    this.setState({\n      selectedFile: event.target.files[0]\n    });\n  }; // On file upload (click the upload button)\n\n\n  download = async file => {\n    var element = document.createElement('a');\n    let blob = await fetch(file).then(r => r.blob());\n    await console.log(blob);\n    return await URL.createObjectURL(blob);\n  }; // File content to be displayed after\n  // file upload is complete\n\n\n  fileData = () => {\n    console.log('nh', this.state.files);\n\n    if (this.state.files.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.files.map(each => /*#__PURE__*/_jsxDEV(\"a\", {\n          href: each,\n          download: true,\n          children: \"download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Choose before Pressing the Upload button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this), this.fileData()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 4\n  }, this);\n};\n\n_s(App, \"aZFt5wIEdGMDZKLKPXghUPtdxX4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/tanyajain/study/s3upload/client/src/App.js"],"names":["React","useState","useContext","Upload","Context","axios","App","context","setContext","onFileChange","event","setState","selectedFile","target","files","download","file","element","document","createElement","blob","fetch","then","r","console","log","URL","createObjectURL","fileData","state","length","map","each"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,UAAzB,QAA2C,OAA3C;AACA,SAAQC,MAAR,QAAqB,SAArB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,UAAU,CAACE,OAAD,CAAxC,CAFiB,CAGjB;;AACAK,EAAAA,YAAY,GAAIC,KAAD,IAAW;AACzB;AACA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,YAAY,EAAEF,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,KAAd;AACA,GAHD,CAJiB,CASjB;;;AAEAC,EAAAA,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC1B,QAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAd;AACA,QAAIC,IAAI,GAAG,MAAMC,KAAK,CAACL,IAAD,CAAL,CAAYM,IAAZ,CAAkBC,CAAD,IAAOA,CAAC,CAACH,IAAF,EAAxB,CAAjB;AACA,UAAMI,OAAO,CAACC,GAAR,CAAYL,IAAZ,CAAN;AACC,WAAO,MAAMM,GAAG,CAACC,eAAJ,CAAoBP,IAApB,CAAb;AAED,GAND,CAXiB,CAkBjB;AACA;;;AACAQ,EAAAA,QAAQ,GAAG,MAAM;AAChBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,KAAKI,KAAL,CAAWf,KAA7B;;AACA,QAAI,KAAKe,KAAL,CAAWf,KAAX,CAAiBgB,MAAjB,GAA0B,CAA9B,EAAiC;AAChC,0BACC;AAAA,kBACE,KAAKD,KAAL,CAAWf,KAAX,CAAiBiB,GAAjB,CAAsBC,IAAD,iBACrB;AAAG,UAAA,IAAI,EAAEA,IAAT;AAAe,UAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AAgBA,KAjBD,MAiBO;AACN,0BACC;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAMA;AACD,GA3BD;;AA8BC,sBACC;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFN,EAGG,KAAKJ,QAAL,EAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUD,CA5DD;;GAAMtB,G;;KAAAA,G;AA8DN,eAAeA,GAAf","sourcesContent":["import React, { useState,useContext } from 'react';\nimport {Upload} from './upoad';\nimport {Context} from './context'\nimport './App.css';\nimport axios from 'axios';\n\n\nconst App = () => {\n\t\n\tconst [context, setContext] = useContext(Context);\n\t// On file select (from the pop up)\n\tonFileChange = (event) => {\n\t\t// Update the state\n\t\tthis.setState({ selectedFile: event.target.files[0] });\n\t};\n\n\t// On file upload (click the upload button)\n\n\tdownload = async (file) => {\n\t\tvar element = document.createElement('a');\n\t\tlet blob = await fetch(file).then((r) => r.blob());\n\t\tawait console.log(blob);\n\t\t return await URL.createObjectURL(blob);\n\t\t\n\t};\n\t// File content to be displayed after\n\t// file upload is complete\n\tfileData = () => {\n\t\tconsole.log('nh', this.state.files);\n\t\tif (this.state.files.length > 0) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{this.state.files.map((each) => (\n\t\t\t\t\t\t<a href={each} download>\n\t\t\t\t\t\t\tdownload\n\t\t\t\t\t\t</a>\n\t\t\t\t\t))}\n\t\t\t\t\t{/* <h2>File Details:</h2>\n\n\t\t\t\t\t<p>File Name: {this.state.selectedFile.name}</p>\n\n\t\t\t\t\t<p>File Type: {this.state.selectedFile.type}</p>\n\n\t\t\t\t\t<p>Last Modified: {this.state.selectedFile.lastModifiedDate.toDateString()}</p> */}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<h4>Choose before Pressing the Upload button</h4>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t\n\t\t\t     \t<Upload/>\n\t\t\t\t\t{this.fileData()}\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}