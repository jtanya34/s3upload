{"ast":null,"code":"var _jsxFileName = \"/Users/tanyajain/study/s3upload/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { Upload } from './upoad';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected\n      selectedFile: null,\n      loading: true,\n      files: []\n    };\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      this.setState({\n        loading: true\n      });\n      let formData = new FormData();\n\n      if (this.state.selectedFile && this.state.selectedFile.name) {\n        formData.append('file', this.state.selectedFile);\n        formData.append('name', this.state.selectedFile.name);\n        axios({\n          method: 'post',\n          url: 'http://localhost:4000/upload',\n          data: formData\n        }).then(res => {\n          console.log(res);\n          this.setState({\n            loading: false,\n            status: res.data.Message\n          });\n        });\n        console.log(this.state.selectedFile);\n      }\n    };\n\n    this.download = async file => {\n      var element = document.createElement('a');\n      let blob = await fetch(file).then(r => r.blob());\n      await console.log(blob);\n      return await URL.createObjectURL(blob);\n    };\n\n    this.fileData = () => {\n      console.log('nh', this.state.files);\n\n      if (this.state.files.length > 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.files.map(each => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: each,\n            download: true,\n            children: \"download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 5\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 5\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 10\n      }, this), this.fileData()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tanyajain/study/s3upload/client/src/App.js"],"names":["React","Component","Upload","axios","App","state","selectedFile","loading","files","onFileChange","event","setState","target","onFileUpload","formData","FormData","name","append","method","url","data","then","res","console","log","status","Message","download","file","element","document","createElement","blob","fetch","r","URL","createObjectURL","fileData","length","map","each","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Upload} from './upoad'\nimport './App.css';\nimport axios from 'axios';\nclass App extends Component {\n\tstate = {\n\t\t// Initially, no file is selected\n\t\tselectedFile: null,\n\t\tloading: true,\n\t\tfiles: [],\n\t};\n\t\n\t// On file select (from the pop up)\n\tonFileChange = (event) => {\n\t\t// Update the state\n\t\tthis.setState({ selectedFile: event.target.files[0] });\n\t};\n\n\t// On file upload (click the upload button)\n\tonFileUpload = () => {\n\t\tthis.setState({ loading: true });\n\t\tlet formData = new FormData();\n\t\tif (this.state.selectedFile && this.state.selectedFile.name) {\n\t\t\tformData.append('file', this.state.selectedFile);\n\t\t\tformData.append('name', this.state.selectedFile.name);\n\t\t\taxios({\n\t\t\t\tmethod: 'post',\n\t\t\t\turl: 'http://localhost:4000/upload',\n\t\t\t\tdata: formData,\n\t\t\t}).then((res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tthis.setState({ loading: false, status: res.data.Message });\n\t\t\t});\n\t\t\tconsole.log(this.state.selectedFile);\n\t\t}\n\t};\n\tdownload = async (file) => {\n\t\tvar element = document.createElement('a');\n\t\tlet blob = await fetch(file).then((r) => r.blob());\n\t\tawait console.log(blob);\n\t\t return await URL.createObjectURL(blob);\n\t\t\n\t};\n\t// File content to be displayed after\n\t// file upload is complete\n\tfileData = () => {\n\t\tconsole.log('nh', this.state.files);\n\t\tif (this.state.files.length > 0) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{this.state.files.map((each) => (\n\t\t\t\t\t\t<a href={each} download>\n\t\t\t\t\t\t\tdownload\n\t\t\t\t\t\t</a>\n\t\t\t\t\t))}\n\t\t\t\t\t{/* <h2>File Details:</h2>\n\n\t\t\t\t\t<p>File Name: {this.state.selectedFile.name}</p>\n\n\t\t\t\t\t<p>File Type: {this.state.selectedFile.type}</p>\n\n\t\t\t\t\t<p>Last Modified: {this.state.selectedFile.lastModifiedDate.toDateString()}</p> */}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<h4>Choose before Pressing the Upload button</h4>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t\n\t\t\t     \t<Upload/>\n\t\t\t\t\t{this.fileData()}\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}