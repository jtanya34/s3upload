{"ast":null,"code":"var _jsxFileName = \"/Users/tanyajain/study/s3upload/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected\n      selectedFile: null,\n      loading: true,\n      files: []\n    };\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      this.setState({\n        loading: true\n      });\n      let formData = new FormData();\n\n      if (this.state.selectedFile && this.state.selectedFile.name) {\n        formData.append('file', this.state.selectedFile);\n        formData.append('name', this.state.selectedFile.name);\n        axios({\n          method: 'post',\n          url: 'http://localhost:4000/upload',\n          data: formData\n        }).then(res => {\n          console.log(res);\n          this.setState({\n            loading: false,\n            status: res.data.Message\n          });\n        });\n        console.log(this.state.selectedFile);\n      }\n    };\n\n    this.download = async (file, url) => {\n      var element = document.createElement(\"a\");\n      let blob = await fetch(file).then(r => r.blob());\n      await console.log(blob);\n      const u = await URL.createObjectURL(blob);\n      await console.log(u);\n    };\n\n    this.fileData = () => {\n      console.log('nh', this.state.files);\n\n      if (this.state.files.length > 0) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.files.map(each => /*#__PURE__*/_jsxDEV(\"a\", {\n            href: each,\n            download: true,\n            children: \"download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 34\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }, this);\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios({\n      method: 'get',\n      url: 'http://localhost:4000/list'\n    }).then(res => {\n      console.log(res.data);\n      let filesUrl = [];\n\n      for (let i = 0; i < res.data.files.length; i++) {\n        let blob = this.download(res.data.files[i]);\n        console.log('blob', blob);\n        filesUrl.push(blob);\n      }\n\n      this.setState({\n        loading: false,\n        files: filesUrl\n      });\n    });\n  } // On file select (from the pop up)\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"myfile\",\n          children: \"Select a file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"App-link\",\n          type: \"file\",\n          id: \"myfile\",\n          name: \"myfile\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 6\n        }, this), this.fileData(), this.state.loading ? 'Loading ...' : this.state.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tanyajain/study/s3upload/client/src/App.js"],"names":["React","Component","axios","App","state","selectedFile","loading","files","onFileChange","event","setState","target","onFileUpload","formData","FormData","name","append","method","url","data","then","res","console","log","status","Message","download","file","element","document","createElement","blob","fetch","r","u","URL","createObjectURL","fileData","length","map","each","componentDidMount","filesUrl","i","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACP;AACAC,MAAAA,YAAY,EAAE,IAFP;AAGPC,MAAAA,OAAO,EAAC,IAHD;AAIPC,MAAAA,KAAK,EAAC;AAJC,KADmB;;AAAA,SAuB3BC,YAvB2B,GAuBXC,KAAD,IAAW;AACzB;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA,YAAY,EAAEI,KAAK,CAACE,MAAN,CAAaJ,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AACA,KA1B0B;;AAAA,SA6B3BK,YA7B2B,GA6BZ,MAAM;AACpB,WAAKF,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAC;AAAT,OAAd;AACA,UAAIO,QAAQ,GAAG,IAAIC,QAAJ,EAAf;;AACA,UAAI,KAAKV,KAAL,CAAWC,YAAX,IAA2B,KAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAAvD,EAA6D;AAC5DF,QAAAA,QAAQ,CAACG,MAAT,CAAgB,MAAhB,EAAwB,KAAKZ,KAAL,CAAWC,YAAnC;AACAQ,QAAAA,QAAQ,CAACG,MAAT,CAAgB,MAAhB,EAAuB,KAAKZ,KAAL,CAAWC,YAAX,CAAwBU,IAA/C;AACAb,QAAAA,KAAK,CAAC;AACLe,UAAAA,MAAM,EAAE,MADH;AAELC,UAAAA,GAAG,EAAE,8BAFA;AAGLC,UAAAA,IAAI,EAACN;AAHA,SAAD,CAAL,CAIGO,IAJH,CAISC,GAAD,IAAS;AAChBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,eAAKX,QAAL,CAAc;AAACJ,YAAAA,OAAO,EAAC,KAAT;AAAekB,YAAAA,MAAM,EAACH,GAAG,CAACF,IAAJ,CAASM;AAA/B,WAAd;AACA,SAPD;AAQAH,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWC,YAAvB;AACA;AACD,KA7C0B;;AAAA,SA8C1BqB,QA9C0B,GA8Cf,OAAMC,IAAN,EAAWT,GAAX,KAAmB;AAC9B,UAAIU,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAd;AACA,UAAIC,IAAI,GAAG,MAAMC,KAAK,CAACL,IAAD,CAAL,CAAYP,IAAZ,CAAiBa,CAAC,IAAIA,CAAC,CAACF,IAAF,EAAtB,CAAjB;AACA,YAAMT,OAAO,CAACC,GAAR,CAAYQ,IAAZ,CAAN;AACF,YAAMG,CAAC,GAAE,MAAMC,GAAG,CAACC,eAAJ,CAAoBL,IAApB,CAAf;AACA,YAAMT,OAAO,CAACC,GAAR,CAAYW,CAAZ,CAAN;AAEI,KArDwB;;AAAA,SAwD3BG,QAxD2B,GAwDhB,MAAM;AAChBf,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiB,KAAKnB,KAAL,CAAWG,KAA5B;;AACA,UAAI,KAAKH,KAAL,CAAWG,KAAX,CAAiB+B,MAAjB,GAAwB,CAA5B,EAA+B;AAC9B,4BACC;AAAA,oBACE,KAAKlC,KAAL,CAAWG,KAAX,CAAiBgC,GAAjB,CAAqBC,IAAI,iBAAE;AAAG,YAAA,IAAI,EAAEA,IAAT;AAAe,YAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA3B;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AAYA,OAbD,MAaO;AACN,4BACC;AAAA,kCACC;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD;AAMA;AACD,KA/E0B;AAAA;;AAO3BC,EAAAA,iBAAiB,GAAG;AACnBvC,IAAAA,KAAK,CAAC;AACLe,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,GAAG,EAAE;AAFA,KAAD,CAAL,CAGGE,IAHH,CAGSC,GAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAaF,GAAG,CAACF,IAAjB;AACA,UAAIuB,QAAQ,GAAC,EAAb;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACtB,GAAG,CAACF,IAAJ,CAASZ,KAAT,CAAe+B,MAA7B,EAAoCK,CAAC,EAArC,EAAwC;AACvC,YAAIZ,IAAI,GAAI,KAAKL,QAAL,CAAcL,GAAG,CAACF,IAAJ,CAASZ,KAAT,CAAeoC,CAAf,CAAd,CAAZ;AACArB,QAAAA,OAAO,CAACC,GAAR,CAAa,MAAb,EAAoBQ,IAApB;AACAW,QAAAA,QAAQ,CAACE,IAAT,CAAcb,IAAd;AACA;;AACA,WAAKrB,QAAL,CAAc;AAACJ,QAAAA,OAAO,EAAC,KAAT;AAAeC,QAAAA,KAAK,EAACmC;AAArB,OAAd;AACD,KAZD;AAaA,GArB0B,CAsB3B;;;AA2DAG,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACC;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACC;AAAO,UAAA,GAAG,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAO,UAAA,SAAS,EAAC,UAAjB;AAA4B,UAAA,IAAI,EAAC,MAAjC;AAAwC,UAAA,EAAE,EAAC,QAA3C;AAAoD,UAAA,IAAI,EAAC,QAAzD;AAAkE,UAAA,QAAQ,EAAE,KAAKrC;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAQ,UAAA,OAAO,EAAE,KAAKI,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD,EAIE,KAAKyB,QAAL,EAJF,EAKE,KAAKjC,KAAL,CAAWE,OAAX,GAAqB,aAArB,GAAqC,KAAKF,KAAL,CAAWoB,MALlD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAWA;;AA7F0B;;AAgG5B,eAAerB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nclass App extends Component {\n\tstate = {\n\t\t// Initially, no file is selected\n\t\tselectedFile: null,\n\t\tloading:true,\n\t\tfiles:[]\n\t};\n\tcomponentDidMount() {\n\t\taxios({\n\t\t\tmethod: 'get',\n\t\t\turl: 'http://localhost:4000/list'\n\t\t}).then((res) => {\n\t\t\tconsole.log( res.data)\n\t\t\tlet filesUrl=[]\n\t\t\tfor(let i=0;i<res.data.files.length;i++){\n\t\t\t\tlet blob =  this.download(res.data.files[i])\n\t\t\t\tconsole.log( 'blob',blob)\n\t\t\t\tfilesUrl.push(blob)\n\t\t\t}\n\t\t\t this.setState({loading:false,files:filesUrl})\n\t\t});\n\t}\n\t// On file select (from the pop up)\n\tonFileChange = (event) => {\n\t\t// Update the state\n\t\tthis.setState({ selectedFile: event.target.files[0] });\n\t};\n\n\t// On file upload (click the upload button)\n\tonFileUpload = () => {\n\t\tthis.setState({loading:true})\n\t\tlet formData = new FormData();\n\t\tif (this.state.selectedFile && this.state.selectedFile.name) {\n\t\t\tformData.append('file', this.state.selectedFile );\n\t\t\tformData.append('name',this.state.selectedFile.name)\n\t\t\taxios({\n\t\t\t\tmethod: 'post',\n\t\t\t\turl: 'http://localhost:4000/upload',\n\t\t\t\tdata:formData,\n\t\t\t}).then((res) => {\n\t\t\t\tconsole.log(res)\n\t\t\t\tthis.setState({loading:false,status:res.data.Message})\n\t\t\t});\n\t\t\tconsole.log(this.state.selectedFile);\n\t\t}\n\t};\n\t download = async(file,url) => {\n\t\tvar element = document.createElement(\"a\");\n\t\tlet blob = await fetch(file).then(r => r.blob());\n\t\tawait console.log(blob);\nconst u=\tawait URL.createObjectURL(blob)\nawait console.log(u);\n\t\t\n\t  };\n\t// File content to be displayed after\n\t// file upload is complete\n\tfileData = () => {\n\t\tconsole.log('nh',this.state.files)\n\t\tif (this.state.files.length>0) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t{this.state.files.map(each=><a href={each} download>download</a>)}\n\t\t\t\t\t{/* <h2>File Details:</h2>\n\n\t\t\t\t\t<p>File Name: {this.state.selectedFile.name}</p>\n\n\t\t\t\t\t<p>File Type: {this.state.selectedFile.type}</p>\n\n\t\t\t\t\t<p>Last Modified: {this.state.selectedFile.lastModifiedDate.toDateString()}</p> */}\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<h4>Choose before Pressing the Upload button</h4>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<label for=\"myfile\">Select a file:</label>\n\t\t\t\t\t<input className=\"App-link\" type=\"file\" id=\"myfile\" name=\"myfile\" onChange={this.onFileChange} />\n\t\t\t\t\t<button onClick={this.onFileUpload}>Upload!</button>\n\t\t\t\t\t{this.fileData()}\n\t\t\t\t\t{this.state.loading ? 'Loading ...' : this.state.status}\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}