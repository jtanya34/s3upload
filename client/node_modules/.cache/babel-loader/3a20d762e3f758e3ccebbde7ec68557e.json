{"ast":null,"code":"var _jsxFileName = \"/Users/tanyajain/study/s3upload/client/src/list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { get_api } from './api';\nimport { Context } from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const List = () => {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [message, setMessage] = useState('');\n  const [context, setContext] = useContext(Context);\n  useEffect(() => {\n    get_api('list').then(res => {\n      console.log(res.data);\n      let filesUrl = [];\n      setFiles(res.data.files); // for (let i = 0; i < res.data.files.length; i++) {\n      // \tdownload(res.data.files[i]).then((url) => {\n      // \t\tfilesUrl.push(url);\n      // \t\tsetFiles(filesUrl);\n\n      setLoading(false); // \t});\n      // }\n    });\n  }, [context, files]);\n\n  const download = file => {\n    var element = document.createElement('a');\n    let blob = fetch(file).then(r => r.blob());\n    console.log(blob);\n    URL.createObjectURL(blob).then(url => {\n      return url;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? 'Loading ...' : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: files && files.length > 0 && files.map((each, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"upload\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: each,\n            download: true,\n            children: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => download(each),\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 8\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(List, \"urw4Zy2CUa2RgxtZDqRSj5d4PUs=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/tanyajain/study/s3upload/client/src/list.js"],"names":["React","useState","useEffect","useContext","get_api","Context","List","files","setFiles","loading","setLoading","message","setMessage","context","setContext","then","res","console","log","data","filesUrl","download","file","element","document","createElement","blob","fetch","r","URL","createObjectURL","url","length","map","each","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;;;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBX,UAAU,CAACE,OAAD,CAAxC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACfE,IAAAA,OAAO,CAAC,MAAD,CAAP,CAAgBW,IAAhB,CAAsBC,GAAD,IAAS;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACA,UAAIC,QAAQ,GAAG,EAAf;AACSZ,MAAAA,QAAQ,CAACQ,GAAG,CAACG,IAAJ,CAASZ,KAAV,CAAR,CAHoB,CAI7B;AACA;AACA;AACA;;AACkBG,MAAAA,UAAU,CAAC,KAAD,CAAV,CARW,CAS7B;AACA;AACA,KAXD;AAYA,GAbQ,EAaN,CAACG,OAAD,EAASN,KAAT,CAbM,CAAT;;AAeA,QAAMc,QAAQ,GAAKC,IAAD,IAAU;AAC3B,QAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAd;AACA,QAAIC,IAAI,GAAIC,KAAK,CAACL,IAAD,CAAL,CAAYP,IAAZ,CAAkBa,CAAD,IAAOA,CAAC,CAACF,IAAF,EAAxB,CAAZ;AACCT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACCG,IAAAA,GAAG,CAACC,eAAJ,CAAoBJ,IAApB,EAA0BX,IAA1B,CAAgCgB,GAAD,IAAS;AACjC,aAAOA,GAAP;AACF,KAFL;AAGF,GAPD;;AASA,sBACC;AAAA,cACEtB,OAAO,GACP,aADO,gBAGP;AAAA,gBACEF,KAAK,IACLA,KAAK,CAACyB,MAAN,GAAe,CADf,IAEAzB,KAAK,CAAC0B,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACT;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA,gCACC;AAAA,iCACC;AAAG,YAAA,IAAI,EAAED,IAAT;AAAe,YAAA,QAAQ,MAAvB;AAAA,sBACEC;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADD,eAMC;AAAQ,UAAA,OAAO,EAAE,MAAMd,QAAQ,CAACa,IAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAND;AAAA,SAA4BC,KAA5B;AAAA;AAAA;AAAA;AAAA,cADD;AAHF;AAAA;AAAA;AAAA;AAAA;AAJF,mBADD;AAsBA,CApDM;;GAAM7B,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { get_api } from './api';\nimport { Context } from './context';\n\nexport const List = () => {\n\tconst [files, setFiles] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tconst [message, setMessage] = useState('');\n\tconst [context, setContext] = useContext(Context);\n\n\tuseEffect(() => {\n\t\tget_api('list').then((res) => {\n\t\t\tconsole.log(res.data);\n\t\t\tlet filesUrl = [];\n            setFiles(res.data.files)\n\t\t\t// for (let i = 0; i < res.data.files.length; i++) {\n\t\t\t// \tdownload(res.data.files[i]).then((url) => {\n\t\t\t// \t\tfilesUrl.push(url);\n\t\t\t// \t\tsetFiles(filesUrl);\n                     setLoading(false);\n\t\t\t// \t});\n\t\t\t// }\n\t\t});\n\t}, [context,files]);\n\n\tconst download =  (file) => {\n\t\tvar element = document.createElement('a');\n\t\tlet blob =  fetch(file).then((r) => r.blob());\n\t\t console.log(blob);\n\t\t  URL.createObjectURL(blob).then((url) => {\n           return url\n        });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{loading ? (\n\t\t\t\t'Loading ...'\n\t\t\t) : (\n\t\t\t\t<ul>\n\t\t\t\t\t{files &&\n\t\t\t\t\t\tfiles.length > 0 &&\n\t\t\t\t\t\tfiles.map((each, index) => (\n\t\t\t\t\t\t\t<li className=\"upload\" key={index}>\n\t\t\t\t\t\t\t\t<h2>\n\t\t\t\t\t\t\t\t\t<a href={each} download>\n\t\t\t\t\t\t\t\t\t\t{index}\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t\t<button onClick={() => download(each)}>Download</button>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t))}\n\t\t\t\t</ul>\n\t\t\t)}\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}