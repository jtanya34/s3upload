{"ast":null,"code":"var _jsxFileName = \"/Users/tanyajain/study/s3upload/client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Initially, no file is selected\n      selectedFile: null\n    };\n\n    this.onFileChange = event => {\n      // Update the state\n      this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    this.onFileUpload = () => {\n      let formData = new FormData();\n\n      if (this.state.selectedFile && this.state.selectedFile.name) {\n        formData.append('file', this.state.selectedFile);\n        formData.append('name', this.state.selectedFile.name);\n\n        for (const entry of formData.entries()) {\n          console.log('r', entry);\n        }\n\n        axios({\n          method: 'post',\n          url: 'http://localhost:4000/upload',\n          data: formData\n        }).then(res => {\n          console.log('res', res);\n          console.log(res.data);\n          this.setState({\n            loading: false\n          });\n        });\n        console.log(this.state.selectedFile);\n      }\n    };\n\n    this.fileData = () => {\n      if (this.state.selectedFile) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"File Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Name: \", this.state.selectedFile.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"File Type: \", this.state.selectedFile.type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Modified: \", this.state.selectedFile.lastModifiedDate.toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Choose before Pressing the Upload button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"myfile\",\n          children: \"Select a file:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"App-link\",\n          type: \"file\",\n          id: \"myfile\",\n          name: \"myfile\",\n          onChange: this.onFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.onFileUpload,\n          children: \"Upload!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this), this.fileData()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/tanyajain/study/s3upload/client/src/App.js"],"names":["React","Component","axios","App","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","name","append","entry","entries","console","log","method","url","data","then","res","loading","fileData","type","lastModifiedDate","toDateString","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nclass App extends Component {\n\tstate = {\n\t\t// Initially, no file is selected\n\t\tselectedFile: null,\n\t};\n\t// componentDidMount() {\n\t//   axios.get(`https://jsonplaceholder.typicode.com/users`)\n\t//     .then(res => {\n\t//       const persons = res.data;\n\t//       this.setState({ persons });\n\t//     })\n\t// }\n\t// On file select (from the pop up)\n\tonFileChange = (event) => {\n\t\t// Update the state\n\t\tthis.setState({ selectedFile: event.target.files[0] });\n\t};\n\n\t// On file upload (click the upload button)\n\tonFileUpload = () => {\n\t\tlet formData = new FormData();\n\t\tif (this.state.selectedFile && this.state.selectedFile.name) {\n\t\t\tformData.append('file', this.state.selectedFile );\n\t\t\tformData.append('name',this.state.selectedFile.name)\n\t\t\tfor (const entry of formData.entries()) {\n\t\t\t\tconsole.log('r',entry);\n\t\t\t}\n\t\t\taxios({\n\t\t\t\tmethod: 'post',\n\t\t\t\turl: 'http://localhost:4000/upload',\n\t\t\t\tdata:formData,\n\t\t\t}).then((res) => {\n\t\t\t\tconsole.log('res', res);\n\t\t\t\tconsole.log(res.data);\n\t\t\t\tthis.setState({loading:false,})\n\t\t\t});\n\t\t\tconsole.log(this.state.selectedFile);\n\t\t}\n\t};\n\n\t// File content to be displayed after\n\t// file upload is complete\n\tfileData = () => {\n\t\tif (this.state.selectedFile) {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>File Details:</h2>\n\n\t\t\t\t\t<p>File Name: {this.state.selectedFile.name}</p>\n\n\t\t\t\t\t<p>File Type: {this.state.selectedFile.type}</p>\n\n\t\t\t\t\t<p>Last Modified: {this.state.selectedFile.lastModifiedDate.toDateString()}</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<br />\n\t\t\t\t\t<h4>Choose before Pressing the Upload button</h4>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<label for=\"myfile\">Select a file:</label>\n\t\t\t\t\t<input className=\"App-link\" type=\"file\" id=\"myfile\" name=\"myfile\" onChange={this.onFileChange} />\n\t\t\t\t\t<button onClick={this.onFileUpload}>Upload!</button>\n\t\t\t\t\t{this.fileData()}\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}